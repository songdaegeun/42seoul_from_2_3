// token: {<, >, <<, >>, |, ||, &&, *, ', "}
// {*, ', "}는 따로 parsing

%token  WORD           	// 예약어
// %token  ASSIGNMENT_WORD // 할당가능한 이름. ASSIGNMENT_WORD=
// %token  NAME			// 함수 이름
// %token  NEWLINE			// 개행
// %token  IO_NUMBER		// IO_NUMBER>

%token  AND_IF    OR_IF    DSEMI
/*      '&&'      '||'     ';;'    */


%token  DLESS  DGREAT  LESSAND  GREATAND  LESSGREAT  DLESSDASH
/*      '<<'   '>>'    '<&'     '>&'      '<>'       '<<-'   */


// %token  CLOBBER
// /*      '>|'   */


/* The following are the reserved words. */


// %token  If    Then    Else    Elif    Fi    Do    Done
// /*      'if'  'then'  'else'  'elif'  'fi'  'do'  'done'   */


// %token  Case    Esac    While    Until    For
// /*      'case'  'esac'  'while'  'until'  'for'   */


/* These are reserved words, not operator tokens, and are
   recognized when reserved words are recognized. */


// %token  Lbrace    Rbrace    Bang
// /*      '{'       '}'       '!'   */


// %token  In
// /*      'in'   */

// program				::= newline_list complete_commands newline_list 
// 					| newline_list
//					;
complete_commands	::= complete_commands and_or
					| and_or
               		;
// complete_command ::= and_or
//                  ;
and_or           	::= pipe_sequence 
					| and_or AND_IF pipe_sequence 
					| and_or OR_IF pipe_sequence
                 	;
// pipeline         ::=      pipe_sequence
//                  ;
pipe_sequence    	::=	command 
					| pipe_sequence '|' command
                 	;
command				::= simple_command 
					| subshell 
					| subshell redirect_list
					;
// compound_command	::= subshell 
// 					;
subshell			::= '(' term ')'
					;
// compound_list		::= term 
//                 	;
term				::= term and_or 
					| and_or
					;
// for_clause       ::= For name                                      do_group | For name                       sequential_sep do_group | For name newline_list in          sequential_sep do_group | For name newline_list in wordlist sequential_sep do_group
//                  ;
// name             ::= NAME                   
//                  ;
// in               ::= In                    
//                  ;
// wordlist        	::= wordlist WORD 
// 					| WORD
//                 	;
// case_clause      ::= Case WORD newline_list in newline_list case_list    Esac | Case WORD newline_list in newline_list case_list_ns Esac | Case WORD newline_list in newline_list              Esac
//                  ;
// case_list_ns     ::= case_list case_item_ns |           case_item_ns
//                  ;
// case_list        ::= case_list case_item |           case_item
//                  ;
// case_item_ns     ::=     pattern ')' newline_list |     pattern ')' compound_list | '(' pattern ')' newline_list | '(' pattern ')' compound_list
//                  ;
// case_item        ::=     pattern ')' newline_list     DSEMI newline_list |     pattern ')' compound_list DSEMI newline_list | '(' pattern ')' newline_list     DSEMI newline_list | '(' pattern ')' compound_list DSEMI newline_list
//                  ;
// pattern				::=             WORD        
// 					| pattern '|' WORD     
// 					;
// if_clause        ::= If compound_list Then compound_list else_part Fi | If compound_list Then compound_list           Fi
//                  ;
// else_part        ::= Elif compound_list Then compound_list | Elif compound_list Then compound_list else_part | Else compound_list
//                  ;
// while_clause     ::= While compound_list do_group
//                  ;
// until_clause     ::= Until compound_list do_group
//                  ;
// function_definition ::= fname '(' ')' newline_list function_body
//                  ;
// function_body    ::= subshell              | subshell redirect_list  
//                  ;
// fname            ::= NAME                           
//                  ;
// brace_group      ::= Lbrace compound_list Rbrace
//                  ;
// do_group         ::= Do compound_list Done        
//                  ;
simple_command		::= cmd_prefix cmd_word cmd_suffix 
					| cmd_prefix cmd_word
					| cmd_prefix
					| cmd_name cmd_suffix 
					| cmd_name
					;
cmd_name			::= WORD                   
					;
cmd_word			::= WORD                  
                ;
cmd_prefix			::=            io_redirect 
					| cmd_prefix io_redirect 
					;
cmd_suffix			::=            io_redirect 
					| cmd_suffix io_redirect 
					|            WORD 
					| cmd_suffix WORD
					;
redirect_list		::=               io_redirect 
					| redirect_list io_redirect
					;
io_redirect			::=           io_file 
					|           io_here 
					;
io_file				::= '<'       filename 
					| '>'       filename 
					| DGREAT    filename
					;
filename			::= WORD                     
					;
io_here				::= DLESS     here_end
					;
here_end			::= WORD                      
					;
// newline_list		::=              NEWLINE 
// 					| newline_list NEWLINE
// 					;
// linebreak        ::= newline_list
//                  ;
// separator_op     ::= '&' | ';'
//                  ;
// separator        ::= newline_list
//                  ;
// sequential_sep		::= ';' newline_list 
// 					| newline_list
